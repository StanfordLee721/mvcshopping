// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using mvcshopping.Models;

#nullable disable

namespace mvcshopping.Migrations
{
    [DbContext(typeof(dbEntities))]
    [Migration("20250523074317_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("mvcshopping.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CategoryId");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryName = "電腦周邊"
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryName = "手機周邊"
                        },
                        new
                        {
                            CategoryId = 3,
                            CategoryName = "家電"
                        },
                        new
                        {
                            CategoryId = 4,
                            CategoryName = "電腦"
                        },
                        new
                        {
                            CategoryId = 5,
                            CategoryName = "手機"
                        },
                        new
                        {
                            CategoryId = 6,
                            CategoryName = "平板"
                        },
                        new
                        {
                            CategoryId = 7,
                            CategoryName = "相機"
                        },
                        new
                        {
                            CategoryId = 8,
                            CategoryName = "耳機"
                        },
                        new
                        {
                            CategoryId = 9,
                            CategoryName = "音響"
                        },
                        new
                        {
                            CategoryId = 10,
                            CategoryName = "電視"
                        });
                });

            modelBuilder.Entity("mvcshopping.Models.Products", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ProductNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            Address = "台北市",
                            CategoryId = 1,
                            Description = "有線滑鼠，低價位",
                            ImageUrl = "https://example.com/image1.jpg",
                            Price = 299m,
                            ProductName = "滑鼠",
                            ProductNo = 0,
                            RegistrationDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StockQuantity = 100
                        },
                        new
                        {
                            ProductId = 2,
                            Address = "新竹市",
                            CategoryId = 1,
                            Description = "中價位",
                            ImageUrl = "https://example.com/image1.jpg",
                            Price = 1220m,
                            ProductName = "無線滑鼠",
                            ProductNo = 0,
                            RegistrationDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StockQuantity = 80
                        },
                        new
                        {
                            ProductId = 3,
                            Address = "台北市",
                            CategoryId = 1,
                            Description = "高價位",
                            ImageUrl = "https://example.com/image1.jpg",
                            Price = 1800m,
                            ProductName = "藍芽滑鼠",
                            ProductNo = 0,
                            RegistrationDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StockQuantity = 50
                        },
                        new
                        {
                            ProductId = 4,
                            Address = "台北市",
                            CategoryId = 1,
                            Description = "低價位",
                            ImageUrl = "https://example.com/image1.jpg",
                            Price = 299m,
                            ProductName = "有線鍵盤",
                            ProductNo = 0,
                            RegistrationDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StockQuantity = 100
                        },
                        new
                        {
                            ProductId = 5,
                            Address = "高雄市",
                            CategoryId = 1,
                            Description = "中價位",
                            ImageUrl = "https://example.com/image1.jpg",
                            Price = 1000m,
                            ProductName = "無線鍵盤",
                            ProductNo = 0,
                            RegistrationDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StockQuantity = 200
                        },
                        new
                        {
                            ProductId = 6,
                            Address = "臺中市",
                            CategoryId = 1,
                            Description = "高價位",
                            ImageUrl = "https://example.com/image1.jpg",
                            Price = 3000m,
                            ProductName = "電競鍵盤",
                            ProductNo = 0,
                            RegistrationDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StockQuantity = 50
                        },
                        new
                        {
                            ProductId = 7,
                            Address = "臺中市",
                            CategoryId = 1,
                            Description = "高價位",
                            ImageUrl = "https://example.com/image1.jpg",
                            Price = 3000m,
                            ProductName = "電競耳機",
                            ProductNo = 0,
                            RegistrationDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StockQuantity = 50
                        },
                        new
                        {
                            ProductId = 8,
                            Address = "高雄市",
                            CategoryId = 1,
                            Description = "中價位",
                            ImageUrl = "https://example.com/image1.jpg",
                            Price = 1000m,
                            ProductName = "藍芽耳機",
                            ProductNo = 0,
                            RegistrationDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StockQuantity = 200
                        },
                        new
                        {
                            ProductId = 9,
                            Address = "台北市",
                            CategoryId = 1,
                            Description = "低價位",
                            ImageUrl = "https://example.com/image1.jpg",
                            Price = 299m,
                            ProductName = "有線耳機",
                            ProductNo = 0,
                            RegistrationDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StockQuantity = 100
                        },
                        new
                        {
                            ProductId = 10,
                            Address = "高雄市",
                            CategoryId = 1,
                            Description = "中價位",
                            ImageUrl = "https://example.com/image1.jpg",
                            Price = 1000m,
                            ProductName = "藍芽音響",
                            ProductNo = 0,
                            RegistrationDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StockQuantity = 200
                        });
                });

            modelBuilder.Entity("mvcshopping.Models.Tables.Address", b =>
                {
                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AddressId"));

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("CodeNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompTel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactTel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeptName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EngName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FacebookID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GenderCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InstagramID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Latitude")
                        .HasMaxLength(250)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("LineID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LinkedInID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Longitude")
                        .HasMaxLength(250)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SortNo")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("StreetAddress")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TitleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TwitterID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("zipcode")
                        .HasColumnType("int");

                    b.HasKey("AddressId");

                    b.ToTable("Address");

                    b.HasData(
                        new
                        {
                            AddressId = 1,
                            Birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CodeNo = "A001",
                            CompID = "C001",
                            CompName = "ABC Corp.",
                            CompTel = "02-12345678",
                            ContactEmail = "user1@gmail.com",
                            ContactTel = "0912345678",
                            DeptName = "IT",
                            EngName = "John Doe",
                            FirstName = "John",
                            GenderCode = "M",
                            LastName = "Doe",
                            Latitude = 25.0330m,
                            Longitude = 121.5654m,
                            SortNo = "001",
                            StreetAddress = "台北市信義區",
                            TitleName = "Manager",
                            UserNo = "user1",
                            zipcode = 110
                        },
                        new
                        {
                            AddressId = 2,
                            Birthday = new DateTime(1992, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CodeNo = "A002",
                            CompID = "C002",
                            CompName = "XYZ Inc.",
                            CompTel = "02-87654321",
                            ContactEmail = "user2@gmail.com",
                            ContactTel = "0987654321",
                            DeptName = "HR",
                            EngName = "Jane Smith",
                            FirstName = "Jane",
                            GenderCode = "F",
                            LastName = "Smith",
                            Latitude = 24.9394m,
                            Longitude = 121.3662m,
                            SortNo = "002",
                            StreetAddress = "新北市三峽區",
                            TitleName = "Director",
                            UserNo = "user2",
                            zipcode = 237
                        },
                        new
                        {
                            AddressId = 3,
                            Birthday = new DateTime(1995, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CodeNo = "A003",
                            CompID = "C003",
                            CompName = "LMN Ltd.",
                            CompTel = "04-23456789",
                            ContactEmail = "user3@gmail.com",
                            ContactTel = "0934567890",
                            DeptName = "Finance",
                            EngName = "Alice Johnson",
                            FirstName = "Alice",
                            GenderCode = "F",
                            LastName = "Johnson",
                            Latitude = 24.1477m,
                            Longitude = 120.6736m,
                            SortNo = "003",
                            StreetAddress = "台中市南區",
                            TitleName = "Analyst",
                            UserNo = "user3",
                            zipcode = 402
                        },
                        new
                        {
                            AddressId = 4,
                            Birthday = new DateTime(1988, 4, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CodeNo = "A004",
                            CompID = "C004",
                            CompName = "DEF Co.",
                            CompTel = "07-3456789",
                            ContactEmail = "user4@gmail.com",
                            ContactTel = "0912345678",
                            DeptName = "Marketing",
                            EngName = "Bob Brown",
                            FirstName = "Bob",
                            GenderCode = "M",
                            LastName = "Brown",
                            Latitude = 22.6163m,
                            Longitude = 120.3014m,
                            SortNo = "004",
                            StreetAddress = "高雄市前鎮區",
                            TitleName = "Executive",
                            UserNo = "user4",
                            zipcode = 806
                        },
                        new
                        {
                            AddressId = 5,
                            Birthday = new DateTime(1991, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CodeNo = "A005",
                            CompID = "C005",
                            CompName = "GHI Group",
                            CompTel = "06-4567890",
                            ContactEmail = "user5@gmail.com",
                            ContactTel = "0923456789",
                            DeptName = "Sales",
                            EngName = "Charlie Davis",
                            FirstName = "Charlie",
                            GenderCode = "M",
                            LastName = "Davis",
                            Latitude = 22.9992m,
                            Longitude = 120.2270m,
                            SortNo = "005",
                            StreetAddress = "台南市東區",
                            TitleName = "Salesperson",
                            UserNo = "user5",
                            zipcode = 701
                        },
                        new
                        {
                            AddressId = 6,
                            Birthday = new DateTime(1993, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CodeNo = "A006",
                            CompID = "C006",
                            CompName = "JKL Enterprises",
                            CompTel = "02-56789012",
                            ContactEmail = "user6@gmail.com",
                            ContactTel = "0934567890",
                            DeptName = "Operations",
                            EngName = "David Wilson",
                            FirstName = "David",
                            GenderCode = "M",
                            LastName = "Wilson",
                            Latitude = 25.1302m,
                            Longitude = 121.7405m,
                            SortNo = "006",
                            StreetAddress = "基隆市仁愛區",
                            TitleName = "Supervisor",
                            UserNo = "user6",
                            zipcode = 200
                        },
                        new
                        {
                            AddressId = 7,
                            Birthday = new DateTime(1994, 7, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CodeNo = "A007",
                            CompID = "C007",
                            CompName = "MNO Solutions",
                            CompTel = "03-67890123",
                            ContactEmail = "user7@gmail.com",
                            ContactTel = "0912345678",
                            DeptName = "IT Support",
                            EngName = "Eve Garcia",
                            FirstName = "Eve",
                            GenderCode = "F",
                            LastName = "Garcia",
                            Latitude = 24.8138m,
                            Longitude = 120.9675m,
                            SortNo = "007",
                            StreetAddress = "新竹市東區",
                            TitleName = "Technician",
                            UserNo = "user7",
                            zipcode = 300
                        },
                        new
                        {
                            AddressId = 8,
                            Birthday = new DateTime(1990, 8, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CodeNo = "A008",
                            CompID = "C008",
                            CompName = "PQR Technologies",
                            CompTel = "03-78901234",
                            ContactEmail = "user8@gmail.com",
                            ContactTel = "0923456789",
                            DeptName = "Research",
                            EngName = "Frank Martinez",
                            FirstName = "Frank",
                            GenderCode = "M",
                            LastName = "Martinez",
                            Latitude = 24.9524m,
                            Longitude = 121.2250m,
                            SortNo = "008",
                            StreetAddress = "桃園市中壢區",
                            TitleName = "Scientist",
                            UserNo = "user8",
                            zipcode = 320
                        },
                        new
                        {
                            AddressId = 9,
                            Birthday = new DateTime(1995, 9, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CodeNo = "A009",
                            CompID = "C009",
                            CompName = "STU Innovations",
                            CompTel = "05-8901234",
                            ContactEmail = "user9@gmail.com",
                            ContactTel = "0934567890",
                            DeptName = "Design",
                            EngName = "Grace Hernandez",
                            FirstName = "Grace",
                            GenderCode = "F",
                            LastName = "Hernandez",
                            Latitude = 23.4822m,
                            Longitude = 120.4475m,
                            SortNo = "009",
                            StreetAddress = "嘉義市西區",
                            TitleName = "Designer",
                            UserNo = "user9",
                            zipcode = 600
                        },
                        new
                        {
                            AddressId = 10,
                            Birthday = new DateTime(1992, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CodeNo = "A010",
                            CompID = "C010",
                            CompName = "VWX Holdings",
                            CompTel = "08-90123456",
                            ContactEmail = "user10@gmail.com",
                            ContactTel = "0912345678",
                            DeptName = "Legal",
                            EngName = "Henry Lopez",
                            FirstName = "Henry",
                            GenderCode = "M",
                            LastName = "Lopez",
                            Latitude = 22.4563m,
                            Longitude = 120.4555m,
                            SortNo = "010",
                            StreetAddress = "屏東市東港區",
                            TitleName = "Lawyer",
                            UserNo = "user10",
                            zipcode = 928
                        });
                });

            modelBuilder.Entity("mvcshopping.Models.Tables.Orders", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<int>("AddressId")
                        .HasMaxLength(200)
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderQuantity")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("OrderId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            OrderId = 1,
                            AddressId = 1,
                            Description = "請3日內出貨",
                            OrderDate = new DateTime(2025, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderQuantity = 2,
                            Price = 1000m,
                            ProductId = 8,
                            ProductName = "藍芽耳機"
                        },
                        new
                        {
                            OrderId = 2,
                            AddressId = 2,
                            Description = "黑色滑鼠",
                            OrderDate = new DateTime(2025, 3, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderQuantity = 10,
                            Price = 299m,
                            ProductId = 1,
                            ProductName = "滑鼠"
                        },
                        new
                        {
                            OrderId = 3,
                            AddressId = 3,
                            Description = "白色滑鼠",
                            OrderDate = new DateTime(2025, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderQuantity = 3,
                            Price = 1800m,
                            ProductId = 3,
                            ProductName = "藍芽滑鼠"
                        },
                        new
                        {
                            OrderId = 4,
                            AddressId = 1,
                            Description = "請3日內出貨",
                            OrderDate = new DateTime(2025, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderQuantity = 2,
                            Price = 1000m,
                            ProductId = 8,
                            ProductName = "藍芽耳機"
                        },
                        new
                        {
                            OrderId = 5,
                            AddressId = 3,
                            Description = "金色",
                            OrderDate = new DateTime(2025, 1, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderQuantity = 1,
                            Price = 3000m,
                            ProductId = 7,
                            ProductName = "電競耳機"
                        },
                        new
                        {
                            OrderId = 6,
                            AddressId = 3,
                            Description = "黑色",
                            OrderDate = new DateTime(2025, 2, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderQuantity = 1,
                            Price = 3000m,
                            ProductId = 7,
                            ProductName = "電競耳機"
                        },
                        new
                        {
                            OrderId = 7,
                            AddressId = 4,
                            Description = "白色",
                            OrderDate = new DateTime(2025, 3, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderQuantity = 1,
                            Price = 3000m,
                            ProductId = 7,
                            ProductName = "電競耳機"
                        },
                        new
                        {
                            OrderId = 8,
                            AddressId = 5,
                            Description = "藍色",
                            OrderDate = new DateTime(2024, 12, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderQuantity = 5,
                            Price = 1000m,
                            ProductId = 7,
                            ProductName = "藍芽音響"
                        },
                        new
                        {
                            OrderId = 9,
                            AddressId = 6,
                            Description = "紅色",
                            OrderDate = new DateTime(2025, 1, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderQuantity = 1,
                            Price = 3000m,
                            ProductId = 7,
                            ProductName = "電競耳機"
                        },
                        new
                        {
                            OrderId = 10,
                            AddressId = 7,
                            Description = "黑色",
                            OrderDate = new DateTime(2025, 2, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderQuantity = 1,
                            Price = 3000m,
                            ProductId = 6,
                            ProductName = "電競鍵盤"
                        },
                        new
                        {
                            OrderId = 11,
                            AddressId = 8,
                            Description = "白色",
                            OrderDate = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderQuantity = 1,
                            Price = 3000m,
                            ProductId = 6,
                            ProductName = "電競鍵盤"
                        },
                        new
                        {
                            OrderId = 12,
                            AddressId = 9,
                            Description = "紅色",
                            OrderDate = new DateTime(2024, 11, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderQuantity = 1,
                            Price = 3000m,
                            ProductId = 6,
                            ProductName = "電競鍵盤"
                        });
                });

            modelBuilder.Entity("mvcshopping.Models.Users", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FullName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Email = "admin123@example.com",
                            Password = "admin123",
                            UserName = "Admin"
                        },
                        new
                        {
                            UserId = 2,
                            Email = "user1@example.com",
                            Password = "user123",
                            UserName = "user1"
                        },
                        new
                        {
                            UserId = 3,
                            Email = "user2@example.com",
                            Password = "user123",
                            UserName = "user2"
                        },
                        new
                        {
                            UserId = 4,
                            Email = "user3@example.com",
                            Password = "user123",
                            UserName = "user3"
                        },
                        new
                        {
                            UserId = 5,
                            Email = "user4@example.com",
                            Password = "user123",
                            UserName = "user4"
                        },
                        new
                        {
                            UserId = 6,
                            Email = "user5@example.com",
                            Password = "user123",
                            UserName = "user5"
                        },
                        new
                        {
                            UserId = 7,
                            Email = "user6@example.com",
                            Password = "user123",
                            UserName = "user6"
                        },
                        new
                        {
                            UserId = 8,
                            Email = "user7@example.com",
                            Password = "user123",
                            UserName = "user7"
                        },
                        new
                        {
                            UserId = 9,
                            Email = "mis@example.com",
                            Password = "mis123",
                            UserName = "Mis"
                        },
                        new
                        {
                            UserId = 10,
                            Email = "member@example.com",
                            Password = "member123",
                            UserName = "Member"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
