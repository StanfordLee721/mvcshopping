        /// <summary>
        /// 員工資料新增或修改輸入 (id = 0 為新增 , id > 0 為修改)
        /// </summary>
        /// <param name="id">要修改的Key值</param>
        /// <returns></returns>
        // [HttpGet]
        // public IActionResult CreateEdit(int id = 0)
        // {
        //     var model = new Models.MetaDataModel.Products();
        //     if (id == 0)
        //     {
        //         //新增預設值
        //         model.Gendercode = "M"; //性別為男性
        //         model.IsValid = true; //合法使用者
        //         model.OnboardDate = DateTime.Today; //到職日為系統日期
        //     }
        //     else
        //     {
        //         //取得新增或修改的員工資料結構及資料
        //         using var sqlEmp = new z_sqlEmployees();
        //         model = sqlEmp.GetData(id);
        //     }
        //     return View(model);
        // }

        // /// <summary>
        // /// 員工資料新增或修改存檔
        // /// </summary>
        // /// <param name="model">使用者輸入的資料模型</param>
        // /// <returns></returns>
        // [HttpPost]
        // public IActionResult CreateEdit(Models.MetaDataModel.Products model)
        // {
        //     //檢查是否有違反 Metadata 中的 Validation 驗證
        //     if (!ModelState.IsValid) return View(model);
        //     //檢查是否重覆輸入員工編號(EmpNo)值
        //     using var dpr = new DapperRepository();
        //     if (dpr.IsDuplicated(model, "EmpNo"))
        //     {
        //         ModelState.AddModelError("EmpNo", "員工編號重覆輸入!!");
        //         return View(model);
        //     }
        //     //執行新增或修改資料
        //     using var sqlEmp = new z_sqlEmployees();
        //     sqlEmp.CreateEdit(model, model.Id);
        //     //返回員工資料列表
        //     return RedirectToAction("Index", "Employee", new { area = "" });
        // }



        // // 建立/編輯畫面
        // [HttpGet]
        // public IActionResult CreateEdit(int id)
        // {
        //     if (id == 0)
        //         return View(new Products { ProductName = string.Empty, StockQuantity = 0 });
        //     var product = _context.Products.Find(id);
        //     if (product == null)
        //         return NotFound();

        //     return View(product);
        // }

        // // 建立/更新動作
        // [HttpPost]
        // public IActionResult CreateEdit(Products product)
        // {
        //     if (!ModelState.IsValid)
        //         return View(product);

        //     if (product.ProductId == 0)
        //         _context.Products.Add(product);
        //     else
        //         _context.Products.Update(product);

        //     _context.SaveChanges();
        //     return RedirectToAction("Index");
        // }

        // // 刪除
        // public IActionResult Delete(int id)
        // {
        //     var product = _context.Products.Find(id);
        //     if (product == null)
        //         return NotFound();

        //     _context.Products.Remove(product);
        //     _context.SaveChanges();
        //     return RedirectToAction("Index");
        // }


        //     [HttpGet]
        //    public IActionResult Index()
        //     {
        //         var products = _context.Products
        //             .OrderBy(m => m.ProductNo)
        //             .ToList();

        //         var model = new vmProductList
        //         {
        //             Products = products,
        //             CurrentPage = 1,
        //             PageSize = 5,
        //             TotalItems = products.Count,
        //             TotalPages = (int)Math.Ceiling(products.Count / 5.0)
        //         };

        //         return View(model);
        //     }

        //     public IActionResult GetProducts(int pageNumber = 1, int pageSize = 5)
        //     {
        //         // 計算要跳過的記錄數
        //         int skip = (pageNumber - 1) * pageSize;

        //         // 修改查詢以支持分頁
        //         var products = _context.Products
        //             .Skip(skip)
        //             .Take(pageSize)
        //             .ToList();

        //         // 獲取總記錄數用於前端分頁控件
        //         int totalCount = _context.Products.Count();

        //         return View(new vmProductList
        //         {
        //             Products = products,
        //             CurrentPage = pageNumber,
        //             PageSize = pageSize,
        //             TotalItems = totalCount,
        //             TotalPages = (int)Math.Ceiling(totalCount / (double)pageSize)
        //         });
        //     } 